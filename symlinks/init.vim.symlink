" =========================
" +++ Table of Contents +++
" =========================
" 1.0 - General Config
" 1.1.0 - Basic Settings
" 1.1.1 - Indentation
" 1.1.2 - Cursor Indicator
" 1.1 - Plugins
" 1.1.1 - Load Plugins
" 1.1.2 - Configure Plugins
" 1.2 - Colors and Theme
" 1.3 - Custom Controls
" =========================

" 1.0 General Config
" 1.0.1 Basic Settings
set nocompatible
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set laststatus=2                "Always display the status line
set hidden                      "Hide buffer instead of closing it
set pastetoggle=<F2>            "Paste without being smart
set splitbelow
set splitright

" 1.0.2 Indentation
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" Add a visual indicator to the line the cursor is on.
function s:SetCursorLine()
  set cursorline
  hi CursorLine cterm=NONE ctermbg=black
endfunction
autocmd VimEnter * call s:SetCursorLine()

" 1.1 Plugins
" 1.1.1 Load Plugins
call plug#begin('~/.config/nvim/plugged')

" Fuzzy File Finder is awesome for opening files by name.
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Nerd Tree is better than the built in explorer.
Plug 'scrooloose/nerdtree'

" Vim Airline is cool but I mostly just use it to make buffers act and appear
" like tabs conceptually.
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Solarized > all.
Plug 'altercation/vim-colors-solarized'

" Code Completion
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }

" Language support.
Plug 'elixir-lang/vim-elixir'
Plug 'slashmili/alchemist.vim'


Plug 'JamshedVesuna/vim-markdown-preview'

call plug#end()

" 1.1.2 Configure Plugins
" 1.1.2.0 Vim Airline
" Display buffers like tabs when only one tab is open.
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

" 1.1.2.1 NERDTree
" If all buffers are closed except for the NERDTree buffer, quit.
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '~'
let NERDTreeIgnore = ['\.pyc$']

" 1.1.2.2 Deoplete
" Use deoplete.
let g:deoplete#enable_at_startup = 1

" 1.2 Colors and Theme
silent! colorscheme solarized
set background=dark

" 1.3 Custom Controls
" Set the Leader key. I leave the leader key as '\' and remap ' ' to it
" instead of setting ' ' as the leader. This is so that showcmd is actually
" useful.
map <Space> <Leader>

" Buffer Controls
" All buffer controls begin with <Leader>b
"  - n : Next buffer
"  - p : Previous buffer
"  - e : Open explorer in a new buffer
"  - f : Open file in a new buffer
"  - d : Unload the buffer (Fails if there are unwritten changes)
nnoremap <Leader>bn :bn<CR>
nnoremap <Leader>bp :bp<CR>
nnoremap <Leader>be :Ex<CR>
nnoremap <Leader>bf :n<Space>
nnoremap <Leader>bd :bd<CR>

" Window Controls
" All window controls begin with <Leader>w
"  - l : Move to the window on the left
"  - j : Move to the window on the bottom
"  - k : Move to the window on the top
"  - l : Move to the window on the right
"  - nh : Open a file from the explorer in a horizontal split
"  - nv : Open a file from the explorer in a vertical split
"  - rh : Resize the window horizontally (Width)
"  - rv : Resize the window vertically (Height)
nnoremap <Leader>wh <C-w>h
nnoremap <Leader>wj <C-w>j
nnoremap <Leader>wk <C-w>k
nnoremap <Leader>wl <C-w>l
nnoremap <Leader>wnh :Sex<CR>
nnoremap <Leader>wnv :Sex!<CR>
nnoremap <Leader>wrh :resize<Space>
nnoremap <Leader>wrv :vertical<Space>resize<Space>

" Tab Controls
" All tab controls begin with <Leader>t
"  - n : Move to the next tab
"  - p : Move to the previous tab
"  - e : Open explorer in a new tab
nnoremap <Leader>tn :tabnext<CR>
nnoremap <Leader>tp :tabprevious<CR>
nnoremap <Leader>te :Te<CR>

" Grep Controls
" All grep controls begin with <Leader>g
"  - l : Grep for literal string
"  - r : Grep for regex string
nnoremap <Leader>gl :grep<Space>-F<Space>-R<space>'
nnoremap <Leader>gr :grep<Space>-R<Space>'

" Quickfix Controls
" All quickfix controls begin with <Leader>c
"  - n : Move to next quickfix
"  - p : Move to previous quickfix
"  - o : Open the quickfix list
"  - c : Close the quickfix list
nnoremap <Leader>cn :cn<CR>
nnoremap <Leader>cp :cp<CR>
nnoremap <Leader>co :copen<CR>
nnoremap <Leader>cc :cclose<CR>

" General Controls
"  - n : Write current buffer
nnoremap <Leader>w :w<CR>

" Open NERDTree
nnoremap <Leader>e :NERDTree<CR>

" Open FZF
nnoremap <Leader>o :FZF<CR>

" Leader Copy/Paste Controls
" These haven't been working as expected so I'm excluding for now.
"vmap <Leader>y "+y
"vmap <Leader>d "+d
"vmap <Leader>p "+p
"vmap <Leader>P "+P
"nmap <Leader>p "+p
"nmap <Leader>P "+P

