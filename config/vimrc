set nocompatible

set number                        " Show line numbers
set backspace=indent,eol,start    " Make backspace behave as expected in insert mode
set history=1000                  " Increase :cmdline history
set showcmd                       " Show incomplete commands
set showmode                      " Show current mode
set gcr=a:blinkon0                " Disable cursor blink
set visualbell                    " No sounds
set autoread                      " Reload files changed outside vim
set autowrite                     " Write the file on :make
set laststatus=2                  " Always display the status line
set nohidden                      " Hide buffer instead of closing it
set splitright                    " When splitting vertically, the new pane should be on the right
set splitbelow                    " When splitting horizontally, the new pane should be on the bottom
set ruler                         " Show the line & column number at cursor
set pastetoggle=<F2>              " See: http://vim.wikia.com/wiki/Toggle_auto-indenting_for_code_paste
set clipboard=unnamed,unnamedplus " Use system clipboard if possible
set cursorline                    " Add a visual indicator to the line the cursor is on

" Indentation
set autoindent
set smartindent
set smarttab
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab

" Use the following command to use temporarily switch to 2-space tabs
" set autoindent smartindent smarttab shiftwidth=2 softtabstop=2 tabstop=2 expandtab

" Install vim-plug if it isn't already
if has('unix')
    if has('nvim')
        if empty(glob('~/.local/share/nvim/site/autoload/plug.vim'))
            silent !curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
            autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
        endif
    else
        if empty(glob('~/.vim/autoload/plug.vim'))
            silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
            autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
        endif
    endif
endif

filetype plugin on

" Load Plugins
call plug#begin('~/.config/nvim/plugged')

" Colorschemes
Plug 'https://github.com/dracula/vim.git'
Plug 'joshdick/onedark.vim'

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --bin' }
Plug 'junegunn/fzf.vim'
Plug 'elixir-lang/vim-elixir'
Plug 'slashmili/alchemist.vim'
Plug 'fatih/vim-go'
Plug 'OrangeT/vim-csharp'
Plug 'mattn/emmet-vim'
Plug 'tpope/vim-vinegar'
Plug 'editorconfig/editorconfig-vim'
Plug 'nvie/vim-flake8'
Plug 'tikhomirov/vim-glsl'
Plug 'martinda/Jenkinsfile-vim-syntax'
Plug 'aklt/plantuml-syntax'
Plug 'elubow/cql-vim'
Plug 'tpope/vim-fugitive'
"Plug 'Valloric/YouCompleteMe'
Plug 'sirver/UltiSnips'
Plug 'honza/vim-snippets'
Plug 'igankevich/mesonic'
Plug 'rhysd/vim-clang-format'

call plug#end()

" vim-clang-format
let g:clang_format#detect_style_file = 1
autocmd FileType c,cpp vnoremap <buffer><Leader>q :ClangFormat<CR>

" UltiSnips
let g:UltiSnipsExpandTrigger="<c-space>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
nnoremap <Leader>se :UltiSnipsEdit<CR>

" FZF
nnoremap <Leader>o :FZF<CR>
nnoremap <silent> <leader>t :Tags<cr>

" Setup vim-go mappings
autocmd FileType go nmap <Leader>gor :GoRun<CR>
autocmd FileType go nmap <Leader>gob :GoBuild<CR>

" Set the Leader key. I leave the leader key as '\' and remap ' ' to it
" instead of setting ' ' as the leader. This is so that showcmd is actually
" useful.
map <Space> <Leader>

nnoremap <Leader>bn :bn<CR>
nnoremap <Leader>bp :bp<CR>
nnoremap <Leader>be :Ex<CR>
nnoremap <Leader>bf :n<Space>
nnoremap <Leader>bd :bd<CR>

nnoremap <Leader>cn :cn<CR>
nnoremap <Leader>cp :cp<CR>
nnoremap <Leader>co :copen<CR>
nnoremap <Leader>cc :cclose<CR>

nmap <leader>ls :ls<cr>:buffer<space>

nnoremap <leader>ssx :set syntax=
nnoremap <leader>ssg :set syntax=groovy<cr>

nnoremap <Leader>[ :!ctags -R<CR>

nnoremap <Leader>g :grep<Space>--exclude="tags"<space>-IR<space>'

nnoremap <silent> <leader><Up> :resize +5<cr>
nnoremap <silent> <leader><Down> :resize -5<cr>
nnoremap <silent> <leader><Right> :vertical resize +5<cr>
nnoremap <silent> <leader><Left> :vertical resize -5<cr>

nnoremap <leader><tab> :tabnew<CR>
nnoremap <A-F1> 1gt
nnoremap <A-F2> 2gt
nnoremap <A-F3> 3gt
nnoremap <A-F4> 4gt
nnoremap <A-F5> 5gt
nnoremap <A-F6> 6gt
nnoremap <A-F7> 7gt
nnoremap <A-F8> 8gt
nnoremap <A-F9> 9gt
nnoremap <A-F0> 10gt
nnoremap <leader><F1> 1gt
nnoremap <leader><F2> 2gt
nnoremap <leader><F3> 3gt
nnoremap <leader><F4> 4gt
nnoremap <leader><F5> 5gt
nnoremap <leader><F6> 6gt
nnoremap <leader><F7> 7gt
nnoremap <leader><F8> 8gt
nnoremap <leader><F9> 9gt
nnoremap <leader><F0> 10gt

nnoremap <silent> <leader><F1> 1gt
nnoremap <silent> <leader><F2> 2gt
nnoremap <silent> <leader><F3> 3gt
nnoremap <silent> <leader><F4> 4gt
nnoremap <silent> <leader><F5> 5gt
nnoremap <silent> <leader><F6> 6gt
nnoremap <silent> <leader><F7> 7gt
nnoremap <silent> <leader><F8> 8gt
nnoremap <silent> <leader><F9> 9gt
nnoremap <silent> <leader><F0> 0gt

silent! colorscheme dracula
hi CursorLine cterm=NONE ctermbg=black

if has('win32')
    set background=dark
else
    " On Non-Windows operating systems, use the host window's background. This
    " allows for transparency if the terminal emulator has that configured.
    hi Normal guibg=NONE ctermbg=NONE
endif

nnoremap <silent> <leader>x :vs<cr>:e ~/.vimrc<cr>
