# Sway Config
#
# Read `man 5 sway` for a complete reference or see /usr/local/etc/sway/config
# for examples

# windows modifier key
set $mod Mod4

# normal mouse controls for moving/resizing windows
floating_modifier $mod normal

# set the font used in window chrome and swaybar
font pango:Ubuntu 14

# navigation variables used in a few places
set $left h
set $down j
set $up k
set $right l

# configure gaps and window chrome styles
#for_window [class="^.*"] border pixel 1
#smart_borders on
gaps inner 10

# color pallette
set $fg     #F8F8F2
set $bg     #282A36
set $cursor #F8F8F2
set $c00    #000000
set $c08    #4D4D4D
set $c01    #FF5555
set $c09    #FF6E67
set $c02    #50FA7B
set $c10    #5AF78E
set $c03    #F1FA8C
set $c11    #F4F99D
set $c04    #BD93F9
set $c12    #CAA9FA
set $c05    #FF79C6
set $c13    #FF92D0
set $c06    #8BE9FD
set $c14    #9AEDFE
set $c07    #BFBFBF
set $c15    #E6E6E6

# color settings
# class                  border  backg.  foreg.  indicator child_border
client.focused           $fg     $bg     $fg     $fg       $fg
client.focused_inactive  #073642 #073642 #888888 #292d2e   #222222
client.unfocused         $bg     $bg     $c08    #ff0000   $bg
#client.urgent           #2f343a #900000 #ffffff #900000   #900000
#client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
#client.background       #ffffff

set $mode_system (l)ock, (Shift+l)ogout, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id swayexit lock, mode "default"
    bindsym Shift+l exec --no-startup-id swayexit logout, mode "default"
    bindsym s exec --no-startup-id swayexit suspend, mode "default"
    bindsym h exec --no-startup-id swayexit hibernate, mode "default"
    bindsym r exec --no-startup-id swayexit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id swayexit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Escape mode "$mode_system"

# exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# enable passthrough, useful for nesting compostiors
mode "passthrough" {
    bindsym Pause mode "default"
}
bindsym $mod+F1 mode "passthrough"

# application launcher (final command should be passed to sway)
bindsym $mod+Space exec rofi -show run | xargs swaymsg exec

# launch conky
bindsym $mod+c exec "conky"

# start a terminal
bindsym $mod+Return exec urxvt

# fuzzy nautilus
bindsym $mod+n exec "fuzzy.sh nautilus"

# reload the configuration file
bindsym $mod+ctrl+Return reload
bindsym $mod+shift+Return restart

# kill focused window
bindsym $mod+minus kill

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change focused window
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# set split mode
bindsym $mod+b splith
bindsym $mod+v splitv
bindsym $mod+semicolon split toggle

# toggle floating on focused window
#bindsym $mod+apostrophe floating toggle
bindsym $mod+m floating toggle

# change focus between tiling / floating windows
bindsym $mod+shift+apostrophe focus mode_toggle


# switch to workspace
bindsym $mod+y workspace 1
bindsym $mod+u workspace 2
bindsym $mod+i workspace 3
bindsym $mod+o workspace 4
bindsym $mod+p workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+y move container to workspace 1
bindsym $mod+Shift+u move container to workspace 2
bindsym $mod+Shift+i move container to workspace 3
bindsym $mod+Shift+o move container to workspace 4
bindsym $mod+Shift+p move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# move workspace
bindsym $mod+Ctrl+h move workspace to output left
bindsym $mod+Ctrl+l move workspace to output right

# change container layout
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# move focus to the parent container
bindsym $mod+Tab focus parent
bindsym $mod+Shift+Tab focus child

# move the focused window to scratchpad
bindsym $mod+Shift+backslash move scratchpad

# show, hide, or cycle through scratchpad windows
bindsym $mod+backslash scratchpad show

# resize window (you can also use the mouse for that)
set $resize_amount 200px
mode "resize" {
    bindsym $left  resize shrink width  $resize_amount
    bindsym $down  resize grow   height $resize_amount
    bindsym $up    resize shrink height $resize_amount
    bindsym $right resize grow   width  $resize_amount

    bindsym Left  resize shrink width  $resize_amount
    bindsym Down  resize grow   height $resize_amount
    bindsym Up    resize shrink height $resize_amount
    bindsym Right resize grow   width  $resize_amount

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# print screen bindings
#  TODO: How can these be implemented with sway?
#bindsym --release Print exec "scrot -m $HOME/box/pic/screenshots/%s_%H%M_%d.%m.%Y_$wx$h.png"
#bindsym --release Shift+Print exec "scrot -s $HOME/box/pic/screenshots/%s_%H%M_%d%m%Y_$wx$h.png"
#bindsym --release $mod+Shift+Print exec "scrot -u -d 4 $HOME/box/pic/screenshots/%s_%H%M_%d%m%Y_$wx$h.png"

# swaybar (man 5 swaybar)
bar {
    status_command py3status -c ~/.config/py3status/config --wm sway
    position top
    separator_symbol " | "

    colors {
        background $bg
        statusline $fg
        separator $c08

        # <colorclass>     <border> <background> <text>
        focused_workspace  $bg      $c06         $c00
        active_workspace   $bg      $c05         $fg
        inactive_workspace $bg      $bg          $fg
        urgent_workspace   $bg      $c01         $fg
        binding_mode       $bg      $c01         $c00
    }
}

# force certain apps to specific workspaces
assign [class="Bcompare"] 5
assign [class="discord"] 8
assign [class="Steam"] 9

# float certain apps by default
for_window [class="^feh$"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="Nitrogen"] floating enable
for_window [class="Ps2"] floating enable
for_window [class="Conky"] floating enable
for_window [class="Nautilus"] floating enable
for_window [instance="RabbitVCS"] floating enable
for_window [class="insync.py"] floating enable
for_window [class="keepassxc"] floating enable
for_window [class="VirtualBox Machine"] floating enable
for_window [class="net-runelite-launcher-Launcher"] floating enable
for_window [class="net-runelite-client-RuneLite"] floating enable
for_window [instance="calculator"] floating enable

# sway background
# TODO: This should be put in a local config since this is hardware specific
output * bg "$HOME/wallpaper.jpg" fill

# configure input devices
input type:touchpad {
    tap enabled
}

exec_always "xrdb -merge $HOME/.Xresources"
exec_always "sh -c '[ -z \"$(pgrep mpd)\" ] && mpd'"

include /usr/local/etc/sway/config.d/*
